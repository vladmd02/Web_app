document.getElementById('main-form').addEventListener("submit" , checkForm); // обраюотчик событиий , первый параметр - название события , которое мы отслеживаем без "on" , второй параметр название функции , которую мы будем вызывать
// когда мы прописываем метод addEventListener , то мы автоматически внуть функции передаем один параметр , и этот параметр можно назвать как event , то есть это само событие , и внутри этого параметра записаны те характеристики ,которые свойствены самому событию
function checkForm( event ) {
event.preventDefault(); // далее мы можем обратиться к этому событию , по сути это объект , и далее обращаемся к методу preventDefault , за счет этого метода , мы отключаем стандартное поведение события , а стандартное поведение - это перезагрузка страницы , и мы это поведение как-бы отключаем / но с другой стороны , мы теперь вообще не сможем выполнить перезагрзку , вне зависемости надо нам это или нет , к примеру при правильном вводе данных - нам надо  перезагрузить, при не праивльном - не  надо / зато переадресацию можно выполнить , и как раз перезагрузка основной страницы не будет нам мешать
var el = document.getElementById('main-form'); // в переменную el записываем элемент с ид main-form , то есть нашу формочку , через которую мы будем рабоать
 console.log("Text"); // текст появляется и сразу исчезает , так как у нас происходит перезагрузка страницы , при использовании event.preventDefault() - у нас не будет происходить перезагрузка ,так же при использовании атрибута htm obsumbit - onsubmit=" return checkForm(this)" и возврате false - у нас так же не убедт перезагрузки
// нам надо сделать  так , что мы будем перезагружать страницу , только в том случае , если функция возвращала true , иначе мы страницу не будем перезагружать
// var name = document.getElementById('name').value;

  var name = el.name.value;
  var pass = el.pass.value;
  var repass = el.repass.value;
  var state = el.state.value;

  var fail = "";

  if ( name == "" || pass =="" || state == "")
    fail = "Заполните все поля ";
  else if  (name.length <=1 || name.length > 50)
    fail = "Введите корректное имя";
  else if ( pass != repass )
    fail = "Пароли должны совпадать ";
  else if ( pass.split ("&").length > 1 ) // функция split возвращает массив из строк
  fail = "Некорректный пароль";

  if ( fail != "") {
    document.getElementById("error").innerHTML = fail; // innerHTML - функция позволяет не только , изменить содержимое тега , но и получить его , то есть вернуть
    return false;
  }
  else {
    alert ("Все данные коректно заполнены");
  // глобальный объект window ,  у которого есть свое значение location , и далее мы устанавлиаем новое значение для свойства location
  window.location = 'https://itp'; // переадресацияя
    return true; // false  ??? если мы возвращаем значение true -то в таком случае , перед тем как я выполню переадесацию  на другую страницу, у нас возвращается значение true из функции , и пользователь просто перезагружается на этой же самой странице
    // то есть как-бы не успевает пройти перезагрзка на другую страницу , происходит перезагрука на этой же странице
  }
  return false; // поскольку мы создали кнопку с типом данных submit , то при нажатии на эту кнопку , у нас автоматически происходит перезагрузка страницы , и в момент перезагрузки страницы , у нас данные отправляются , при чем данные по умолчанию отправляются методом get , поэтому все данные там как раз  и прописаны в url адрессе
  // в методе post - данные не прописываются в url
}